{"version":3,"sources":["components/DBQueryResult.tsx","themes/Standard/Layout.tsx","themes/Standard/index.tsx"],"names":["DBQueryResult","props","useQuery","gql","query","data","loading","error","JSON","stringify","Layout","layout","React","createElement","styled","div","children","Header","Social","Link","href","target","Navigation","to","LinkGroup","name","View","path","component","match","substring","params","company","title","hashType","basename","a","NavLink","useState","isOpen","setIsOpen","links","Children","map","child","index","key","onClick","Theme","configs","theme","_","fonts","primary","colors"],"mappings":"gKAUeA,IAJO,SAACC,GAAgB,IAAD,EACHC,mBAASC,IAAIF,EAAMG,QAA3CC,EAD2B,EAC3BA,KAD2B,EACrBC,QADqB,EACZC,MACtB,OAAQ,+BAAOC,KAAKC,UAAUJ,O,s5CCClC,IAAMK,EAAS,SAATA,EAAUT,GACZ,IAAMU,EAASC,IAAMC,cAAcC,IAAOC,IAA3B,KAKZ,CACCC,SAAU,CACN,eAACN,EAAOO,OAAR,WACI,oDACA,uDAEJ,eAACP,EAAOQ,OAAR,WACI,cAAC,EAAOC,KAAR,CAAaC,KAAK,iDAAiDC,OAAO,SAA1E,sBACA,cAAC,EAAOF,KAAR,CAAaC,KAAK,uCAAuCC,OAAO,SAAhE,uBAEJ,eAACX,EAAOY,WAAR,WACI,cAAC,EAAWH,KAAZ,CAAiBI,GAAG,SAApB,mBACA,eAAC,EAAWC,UAAZ,CAAsBC,KAAK,kBAA3B,UACI,cAAC,EAAWN,KAAZ,CAAiBI,GAAG,wBAApB,kBACA,cAAC,EAAWJ,KAAZ,CAAiBI,GAAG,6BAApB,0BAEJ,eAAC,EAAWC,UAAZ,CAAsBC,KAAK,WAA3B,UACI,cAAC,EAAWN,KAAZ,CAAiBI,GAAG,mBAApB,oBACA,cAAC,EAAWJ,KAAZ,CAAiBI,GAAG,qBAApB,sBACA,cAAC,EAAWJ,KAAZ,CAAiBI,GAAG,uBAApB,wBACA,cAAC,EAAWJ,KAAZ,CAAiBI,GAAG,wBAApB,qCACA,cAAC,EAAWJ,KAAZ,CAAiBI,GAAG,0BAApB,iCAGR,cAACb,EAAOgB,KAAR,UACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,KAAK,SACAC,UAAW,SAAC3B,GAAD,OACP,cAACD,EAAA,EAAD,2BACQC,GADR,IAEIG,MAAK,yIAEqCH,EAAM4B,MAAMF,KAAKG,UAAU,GAFhE,ibAarB,cAAC,IAAD,CAAOH,KAAK,4BACJC,UAAW,SAAC3B,GAAD,OACP,cAACD,EAAA,EAAD,2BACQC,GADR,IAEIG,MAAK,kJAE8CH,EAAM4B,MAAME,OAAOC,QAFjE,8ZAazB,cAAC,IAAD,CAAOL,KAAK,mBACAC,UAAW,SAAC3B,GAAD,OACP,cAACD,EAAA,EAAD,2BACQC,GADR,IAEIG,MAAK,0IAEsCH,EAAM4B,MAAME,OAAOE,MAFzD,mlBAgBrB,cAAC,IAAD,CAAON,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUJ,GAAG,qBAMjC,OACI,cAAC,IAAD,CAAQW,SAAS,QAAQC,SAAS,IAAlC,SACKxB,KAMbD,EAAOO,OAAS,SAAChB,GACb,OAAOW,IAAMC,cAAcC,IAAOC,IAA3B,KAKJ,CAACC,SAAUf,EAAMe,YAGxB,IAAME,EAAS,SAACjB,GACZ,OAAOW,IAAMC,cAAcC,IAAOC,IAA3B,KAIJ,CAACC,SAAUf,EAAMe,YAGxBE,EAAOC,KAAO,SAAClB,GACX,OAAOW,IAAMC,cAAcC,IAAOsB,EAA3B,KAEJnC,IAGPS,EAAOQ,OAASA,EAIhB,IAAMI,EAAa,SAACrB,GAChB,OAAOW,IAAMC,cAAcC,IAAOC,IAA3B,KAMJ,CAACC,SAAUf,EAAMe,YAGxBM,EAAWH,KAAO,SAAClB,GACf,OAAOW,IAAMC,cAAcC,YAAOuB,IAAPvB,CAApB,KAEJb,IAsBPqB,EAAWE,UAlBO,SAACvB,GAAgB,IAAD,EACFqC,oBAAS,GADP,mBACvBC,EADuB,KACfC,EADe,KAOxBC,EAAQ7B,IAAM8B,SAASC,IAAI1C,EAAMe,UAAU,SAAC4B,EAAOC,GAAR,OAC7CjC,IAAMC,cAAcC,YAAOQ,EAAWH,KAAlBL,CAApB,IACeyB,EAAS,QAAU,QADlC,2BAGOK,EAAM3C,OAHb,IAGoB6C,IAAID,QAE5B,OAAOjC,IAAMC,cAAcC,IAAOC,IAA3B,KAEJ,CAACC,SAAU,CAAC,qBAAgB+B,QAZf,WACZP,GAAWD,IAWA,SAAmCtC,EAAMwB,MAAhC,QAA6CgB,MAIzE/B,EAAOY,WAAaA,EAEpBZ,EAAOgB,KAAO,SAACzB,GACX,OAAOW,IAAMC,cAAcC,IAAOC,IAA3B,KAGJ,CAACC,SAAUf,EAAMe,YAGTN,QCtJAsC,UAtBD,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAcZ,OACI,cAAC,IAAD,CAAeC,MAAOC,eAAeF,EAdlB,CACnBG,MAAO,CACHC,QAAS,0BAEbC,OAAQ,CACJD,QAAS,SASb,SACI,cAAC,EAAD","file":"static/js/4.f4228a48.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n\nconst DBQueryResult = (props: any) => {\n    const {data, loading, error} = useQuery(gql(props.query))\n    return (<code>{JSON.stringify(data)}</code>);\n}\nexport default DBQueryResult;","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch, Route, Redirect, NavLink} from 'react-router-dom';\n\n\nimport DBQueryResult from '../../components/DBQueryResult';\n\nimport styled from \"@emotion/styled\";\n\n\nconst Layout = (props: any) => {\n    const layout = React.createElement(styled.div`\n        height: 100vh;\n        display: grid;\n        grid-template-rows: 2fr 1fr 7fr;\n        grid-template-columns: 1fr 4fr;\n    `, {\n        children: [\n            <Layout.Header>\n                <div>Jonathan Crawford</div>\n                <div>Software Engineer</div>\n            </Layout.Header>,\n            <Layout.Social>\n                <Social.Link href='https://www.linkedin.com/in/jonathantcrawford/' target=\"_blank\">LinkedIn</Social.Link>\n                <Social.Link href='https://github.com/jonathantcrawford' target='_blank'>GitHub</Social.Link>\n            </Layout.Social>,\n            <Layout.Navigation>\n                <Navigation.Link to='/about'>About</Navigation.Link>\n                <Navigation.LinkGroup name='Work Experience'>\n                    <Navigation.Link to='/work-experience/bryx'>Bryx</Navigation.Link>\n                    <Navigation.Link to='/work-experience/catertrax'>CaterTrax</Navigation.Link>\n                </Navigation.LinkGroup>\n                <Navigation.LinkGroup name='Projects'>\n                    <Navigation.Link to='/projects/resume'>Resume</Navigation.Link>\n                    <Navigation.Link to='/projects/todo-app'>Todo App</Navigation.Link>\n                    <Navigation.Link to='/projects/nfl-pickem'>NFL Pickem</Navigation.Link>\n                    <Navigation.Link to='/projects/simplescope'>VST Plugin: SimpleScope</Navigation.Link>\n                    <Navigation.Link to='/projects/3d-audio-demo'>3D Audio Demo</Navigation.Link>\n                </Navigation.LinkGroup>\n            </Layout.Navigation>,\n            <Layout.View>\n                <Switch>\n                <Route path=\"/about\"\n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            content(query: { AND: [{ slug: \"${props.match.path.substring(1)}\" }] }) {\n                                                theme\n                                                template\n                                                data {\n                                                    headshot_url\n                                                }\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                    <Route path=\"/work-experience/:company\"\n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            work_experiences(query: { AND: [{ slug: \"${props.match.params.company}\" }] }) {\n                                            company\n                                            role\n                                            location\n                                            duration\n                                            highlights\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                <Route path=\"/projects/:title\" \n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            projects(query: { AND: [{ slug: \"${props.match.params.title}\" }] }) {\n                                                title\n                                                links {\n                                                    title\n                                                    url\n                                                }\n                                                highlights\n                                                date\n                                                tools\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                    <Route path=\"*\"> \n                        <Redirect to=\"/about\" />\n                    </Route>\n                </Switch>\n            </Layout.View>\n    ]});\n\n    return (\n        <Router hashType=\"slash\" basename=\"/\">\n            {layout}\n        </Router>\n    );\n}\n\n\nLayout.Header = (props: any) => {\n    return React.createElement(styled.div`\n        min-height: 100px;\n        grid-row: 1 / 2;\n        grid-column: 1 / 2;\n       \n    `, {children: props.children});\n}\n\nconst Social = (props: any) => {\n    return React.createElement(styled.div`\n        min-height: 60px;\n        grid-row: 2 / 3;\n        grid-column: 1 / 2;\n    `, {children: props.children});\n}\n\nSocial.Link = (props: any) => {\n    return React.createElement(styled.a`\n        color: purple;\n    `, props);\n}\n\nLayout.Social = Social;\n\n\n\nconst Navigation = (props: any) => {\n    return React.createElement(styled.div`\n        grid-row: 3 / 4;\n        grid-column: 1 / 2;\n        \n        display: flex;\n        flex-direction: column;\n    `, {children: props.children});\n}\n\nNavigation.Link = (props: any) => {\n    return React.createElement(styled(NavLink)`\n        color: purple;\n    `, props);\n}\n\n\nconst LinkGroup = (props: any) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const onClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    const links = React.Children.map(props.children, (child, index) => \n        React.createElement(styled(Navigation.Link)`\n            display: ${isOpen ? 'block' : 'none'};\n            color: green;\n        `, {...child.props, key:index}));\n\n    return React.createElement(styled.div`\n        color: blue;\n    `, {children: [<div key=\"name\" onClick={onClick}>{props.name}</div>, links]});\n}\n\nNavigation.LinkGroup = LinkGroup;\nLayout.Navigation = Navigation;\n\nLayout.View = (props: any) => {\n    return React.createElement(styled.div`\n        grid-row: 1 / 4;\n        grid-column: 2 / 3;\n    `, {children: props.children});\n}\n\nexport default Layout;","import React from 'react';\n\nimport * as _ from 'lodash';\nimport {ThemeProvider} from '@emotion/react';\n\n\nimport Layout from './Layout';\n\n\n\nconst Theme = ({configs}: {configs: any}) => {\n    const defaultConfigs = {\n        fonts: {\n            primary: \"'Fira Mono', monospace\"\n        },\n        colors: {\n            primary: 'red'\n        }\n    };\n\n    /**\n     * Could add a function here to validate theme schema.\n     * if (!valid) return <div>theme setup incorrectly</div>\n     */\n    return (\n        <ThemeProvider theme={_.defaultsDeep(configs,defaultConfigs)}>\n            <Layout/>\n        </ThemeProvider>\n    );\n}\n\n\nexport default Theme;\n\n"],"sourceRoot":""}