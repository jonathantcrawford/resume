{"version":3,"sources":["components/basic/Text.tsx","components/loaders/Loader.tsx","components/DBQueryResult.tsx","components/layout/Grid.tsx","components/basic/Container.tsx","components/basic/Link.tsx","components/navigation/NavLink.tsx","components/navigation/NavLinkGroup.tsx","factories/ContentFactory.tsx","themes/traditional.tsx"],"names":["Text","props","type","theme","useTheme","React","createElement","styled","div","text","family","size","color","Loader","useState","dots","setDots","useEffect","timer","setTimeout","clearTimeout","themed","children","DBQueryResult","useQuery","gql","query","data","loading","error","render","JSON","stringify","Grid","grid","backgroundColor","Row","Children","map","child","index","cloneElement","style","padding","padChildren","key","Column","Container","container","Link","a","link","hover","NavLink","_NavLink","navlink","active","activeClassName","NavLinkGroup","isOpen","setIsOpen","links","to","base","display","paddingTop","navlinkgroup","flexDirection","alignItems","onClick","paddingRight","icon","faAngleDown","faAngleRight","name","ContentFactory","contentSchematic","template","content","lazy","Promise","all","resolve","then","fallback","Layout","Header","href","target","View","path","match","substring","params","company","work_experience","location","role","duration","highlights","highlight","component","title","project","date","tools","tool","url","Theme","configs","mergedThemeConfigs","_","body","default","brand","tagline","social","button","document","basename"],"mappings":"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","file":"static/js/5.0e5a44c1.chunk.js","sourcesContent":["import React from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\nconst Text = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.div`\n        font-family: ${theme.text[type].family};\n        font-size: ${theme.text[type].size};\n        color: ${theme.text[type].color};\n    `, props);\n}\n\nexport default Text;","import React, {useState,useEffect} from 'react';\nimport styled from \"@emotion/styled\";\n\nimport Text from '../basic/Text';\n\nconst Loader = (props: any) => {\n    const [dots, setDots] = useState('...')\n\n    useEffect(() => {\n\n        let timer = setTimeout(() => setDots(dots === '......' ? '' : dots + '.'), 100);\n\n        // this will clear Timeout\n        // when component unmount like in willComponentUnmount\n        // and show will not change to true\n        return () => {\n          clearTimeout(timer);\n        };\n    },[dots]);\n\n    const text = props.themed ? <Text>{props.text + dots}</Text> : props.text + dots;\n\n\n\n    return React.createElement(styled.div`\n        position: relative;\n        top: 50%;\n        left: 50%;\n        padding: 20px;\n    `, {...props, children: text});\n}\n\nexport default Loader;","import React from 'react';\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nimport Loader from '../components/loaders/Loader';\n\n\n/**\n * Could refactor as a HoC?\n */\n\nconst DBQueryResult = (props: any) => {\n    const {data, loading, error} = useQuery(gql(props.query));\n    if (loading) return (<Loader themed text=\"loading from db\"/>);\n    if (data && props.render) return props.render({data, loading, error})\n    return (<code>{JSON.stringify(data)}</code>);\n}\nexport default DBQueryResult;","import React from 'react';\n\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\n\n\nconst Grid = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.div`\n        background-color: ${theme.grid[type].backgroundColor}\n    `, props);\n}\n\nconst Row = (props: any) => {\n    return React.createElement(styled.div`\n        display: flex;\n        flex-direction: row;\n    `, {...props, children: \n        [React.Children.map(props.children, (child, index) => {\n            return React.cloneElement(child, {\n                ...child.props, \n                style: {...child.props.style, padding: props.padChildren ? '10px' : '0px'}, \n                key:index\n            })\n        } )]\n    });\n}\n\nconst Column = (props: any) => {\n    return React.createElement(styled.div`\n        flex: ${(props: any) => props.size};\n    `, props);\n}\n\nGrid.Row = Row;\nGrid.Column = Column;\nexport default Grid;","import React from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\nconst Container = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    \n    return React.createElement(styled.div`\n        padding: ${theme.container[type].padding}\n    `, {...props, children: \n        [React.Children.map(props.children, (child, index) => {\n            return React.cloneElement(child, {\n                ...child.props, \n                style: {...child.props.style, padding: props.padChildren ? '10px' : '0px'}, \n                key:index\n            })\n        } )]\n    \n    });\n}\n\nexport default Container;","import React from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\nconst Link = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.a`\n        font-family: ${theme.link[type].family};\n        font-size: ${theme.link[type].size};\n        color: ${theme.link[type].color};\n        &:hover {\n            cursor: pointer;\n            color: ${theme.link[type].hover.color};\n        }\n    `, props);\n}\n\nexport default Link;","import React from 'react';\nimport {NavLink as _NavLink} from 'react-router-dom';\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\nconst NavLink = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled(_NavLink)`\n        font-family: ${theme.navlink[type].family};\n        font-size: ${theme.navlink[type].size};\n        color: ${theme.navlink[type].color};\n        &:hover {\n            cursor: pointer;\n            color: ${theme.navlink[type].hover.color};\n        }\n        &.active {\n            color: ${theme.navlink[type].active.color};\n        }\n    `, {...props, activeClassName: 'active'});\n}\n\nexport default NavLink;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport {useTheme} from '@emotion/react';\nimport styled from \"@emotion/styled\";\n\n\nconst NavLinkGroup = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    const [isOpen, setIsOpen] = useState(true);\n\n    const onClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    const links = React.Children.map(props.children, (child, index) => {\n        return React.cloneElement(child, {\n            ...child.props, \n            key:index, \n            to: props.base + child.props.to,\n            style: {display: isOpen ? 'block' : 'none', paddingTop: '5px'}\n        })\n    } );\n\n    return React.createElement(styled.div`\n        font-family: ${theme.navlinkgroup[type].family};\n        font-size: ${theme.navlinkgroup[type].size};\n        color: ${theme.navlinkgroup[type].color};\n        &:hover {\n            cursor: pointer;\n            color: ${theme.navlinkgroup[type].hover.color}\n        }\n    `, {...props, children: \n        <>\n            <div style={{display: 'flex', flexDirection:'row', alignItems:'center',}} onClick={onClick}>\n                <div style={{paddingRight: '5px'}}><FontAwesomeIcon icon={isOpen ? faAngleDown : faAngleRight}/></div>\n                <div>{props.name}</div>\n            </div>\n            {links}\n        </>\n    });\n}\n\nexport default NavLinkGroup;","import React, {Suspense} from 'react';\nimport Text from '../components/basic/Text';\nimport Loader from '../components/loaders/Loader';\n\nconst ContentFactory = ({contentSchematic}: {contentSchematic: any}) => {\n\n  const {template, data} = contentSchematic;\n\n  const content = (() => {\n    switch (template) {\n      case \"about\":\n        return React.createElement(React.lazy(() => {\n          return Promise.all([\n            import(\"../content/About\"),\n            new Promise(resolve => setTimeout(resolve, 800))\n          ])\n          .then(([moduleExports]) => moduleExports);\n        }\n        ), {data});\n      default:\n        return <Text>content template does not exist</Text>;\n    }\n  })();\n\n  return (\n    <Suspense fallback={<Loader themed text=\"building content\"/>}>\n      {content}\n    </Suspense>\n  )\n}\nexport default ContentFactory;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport * as _ from 'lodash';\nimport {ThemeProvider} from '@emotion/react';\nimport DBQueryResult from '../components/DBQueryResult';\n\nimport Grid from '../components/layout/Grid';\nimport Container from '../components/basic/Container';\nimport Text from '../components/basic/Text';\nimport Link from '../components/basic/Link';\nimport NavLink from '../components/navigation/NavLink';\nimport NavLinkGroup from '../components/navigation/NavLinkGroup';\n\nimport ContentFactory from '../factories/ContentFactory';\n\n\nconst Layout = (props: any) => {\n    return (\n        <Grid>\n            <Grid.Column size={1}>\n                {props.children}\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nLayout.Header = (props: any) => {\n    return (\n        <Grid.Row>\n            <Grid.Column size={1}>\n                <Container padChildren>\n                    <Text type=\"brand\">Jon Crawford</Text>\n                    <Text type=\"tagline\">Software Engineer</Text>\n                </Container>\n                <Container padChildren>\n                    <Link href='https://www.linkedin.com/in/jonathantcrawford/' target=\"_blank\">LinkedIn</Link>\n                    <Link href='https://github.com/jonathantcrawford' target='_blank'>GitHub</Link>\n                </Container>\n            </Grid.Column>\n            <Grid.Column size={3}>\n                <Grid.Row padChildren>\n                    <Container>\n                        <NavLink to='/about'>About</NavLink>\n                    </Container>\n                    <Container>\n                        <NavLinkGroup name='Work Experience' base='/work-experience'>\n                            <NavLink to='/bryx'>Bryx</NavLink>\n                            <NavLink to='/catertrax'>CaterTrax</NavLink>\n                        </NavLinkGroup>\n                    </Container>\n                    <Container>\n                        <NavLinkGroup name='Projects' base='/projects'>\n                            <NavLink to='/resume'>Resume</NavLink>\n                            <NavLink to='/todo-app'>Todo App</NavLink>\n                            <NavLink to='/nfl-pickem'>NFL Pickem</NavLink>\n                            <NavLink to='/simplescope'>VST Plugin: SimpleScope</NavLink>\n                            <NavLink to='/3d-audio-demo'>3D Audio Demo</NavLink>\n                        </NavLinkGroup>\n                    </Container>\n                </Grid.Row>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nLayout.View = (props: any) => {\n    return (\n        <Switch>\n            <Route path=\"/about\"\n                    render={(props: any) => (\n                        <DBQueryResult \n                            {...props} \n                            query={`\n                                query {\n                                    content(query: { AND: [{ template: \"${props.match.path.substring(1)}\" }] }) {\n                                        template\n                                        data {\n                                            headshot_url\n                                        }\n                                    }\n                                }\n                            `}\n                            render={({data}: any) => <ContentFactory contentSchematic={data.content}/> }\n                            />\n                    )}\n                />\n            <Route path=\"/work-experience/:company\"\n                    render={(props: any) => (\n                        <DBQueryResult \n                            {...props} \n                            query={`\n                                query {\n                                    work_experience(query: { AND: [{ slug: \"${props.match.params.company}\" }] }) {\n                                    company\n                                    role\n                                    location\n                                    duration\n                                    highlights\n                                    }\n                                }\n                            `}\n                            render={({data}: any) => (\n                                <Grid.Row padChildren>\n                                    <Grid.Column>\n                                        <Grid.Row><Text>{data.work_experience.company}</Text></Grid.Row>\n                                        <Grid.Row><Text>{data.work_experience.location}</Text></Grid.Row>\n                                        <Grid.Row><Text>{data.work_experience.role}</Text></Grid.Row>\n                                        <Grid.Row><Text>{data.work_experience.duration}</Text></Grid.Row>\n                                        \n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        {data.work_experience.highlights.map((highlight: any, index: any) => <Grid.Row key={index}><Text >{highlight}</Text></Grid.Row>)}  \n                                    </Grid.Column>\n                                </Grid.Row>\n                            )}\n                            />\n                    )}\n                />\n            <Route path=\"/projects/:title\" \n                    component={(props: any) => (\n                        <DBQueryResult \n                            {...props} \n                            query={`\n                                query {\n                                    project(query: { AND: [{ slug: \"${props.match.params.title}\" }] }) {\n                                        title\n                                        links {\n                                            title\n                                            url\n                                        }\n                                        highlights\n                                        date\n                                        tools\n                                    }\n                                }\n                            `}\n                            render={({data}: any) => (\n                                <Grid.Row padChildren>\n                                    <Grid.Column>\n                                        <Grid.Row><Text>{data.project.title}</Text></Grid.Row>\n                                        <Grid.Row><Text>{data.project.date}</Text></Grid.Row>                                        \n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        {data.project.highlights.map((highlight: any, index: any) => <Grid.Row key={'highlights'+index}><Text>{highlight}</Text></Grid.Row>)}\n                                        {data.project.tools.map((tool: any, index: any) => <Grid.Row key={'tools'+index}><Text >{tool}</Text></Grid.Row>)}\n                                        {data.project.links.map((link: any, index: any) => <Grid.Row key={'links'+index}><Link  href={link.url} target=\"_blank\">{link.title}</Link></Grid.Row>)}\n                                    </Grid.Column>\n                                </Grid.Row>\n                            )}\n                            />\n                    )}\n                />\n            <Route path=\"*\"> \n                <Redirect to=\"/about\" />\n            </Route>\n        </Switch>\n    );\n}\n\nconst Theme = ({configs}: {configs: any}) => {\n    const defaultConfigs = {\n        body: {\n            backgroundColor: '#000000'\n        },\n        grid: {\n            default: {\n                backgroundColor: 'transparent'\n            }\n        },\n        container: {\n            default: {\n                padding: '20px'\n            }\n        },\n        text: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"12px\",\n                color: '#FFFFFF',\n            },\n            brand: {\n                family: \"'Fira Mono', monospace\",\n                size: \"24px\",\n                color: '#FFFFFF',\n            },\n            tagline: {\n                family: \"'Fira Mono', monospace\",\n                size: \"16px\",\n                color: '#FFFFFF',\n            }\n        },\n        link: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"10px\",\n                color: '#999999',\n                hover: {\n                    color: '#DDDDDD',\n                }\n            },\n            social: {\n                family: \"'Fira Mono', monospace\",\n                size: \"14px\",\n                color: '#999999',\n                hover: {\n                    color: '#DDDDDD',\n                }\n            }\n        },\n        navlink: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"18px\",\n                color: '#999999',\n                hover: {\n                    color: '#DDDDDD',\n                },\n                active: {\n                    color: '#DDDDDD',\n                }\n            },\n        },\n        navlinkgroup: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"18px\",\n                color: '#999999',\n                hover: {\n                    color: '#DDDDDD',\n                }\n            }\n        },\n        button: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"16px\",\n                color: 'red',\n                backgroundColor: 'yellow',\n                hover: {\n                    color: 'blue',\n                    backgroundColor: 'orange',\n                }\n            }\n        }\n    };\n\n    /**\n     * Could add a function here to validate theme schema.\n     * if (!valid) return <div>theme setup incorrectly</div>\n     */\n\n    /**\n     * Fix for html body background color\n     */\n    const mergedThemeConfigs = _.defaultsDeep(configs,defaultConfigs);\n    document.body.style.backgroundColor = mergedThemeConfigs.body.backgroundColor;\n    return (\n        <ThemeProvider theme={mergedThemeConfigs}>\n            <Router basename=\"/\">\n                <Layout>\n                    <Layout.Header/>\n                    <Layout.View/>\n                </Layout>\n            </Router>\n        </ThemeProvider>\n    );\n}\n\n\nexport default Theme;\n\n\n"],"sourceRoot":""}