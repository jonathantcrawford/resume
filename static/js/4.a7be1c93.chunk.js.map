{"version":3,"sources":["components/basic/Text.tsx","components/DBQueryResult.tsx","components/layout/Box.tsx","components/layout/FlexBox.tsx","components/basic/Link.tsx","components/navigation/NavLink.tsx","factories/ContentFactory.tsx","components/basic/Button.tsx","components/navigation/NavLinkGroup.tsx","themes/standard.tsx"],"names":["Text","props","type","theme","useTheme","React","createElement","styled","div","text","family","size","color","DBQueryResult","useQuery","gql","query","data","loading","error","render","JSON","stringify","Box","FlexBox","flexDirection","children","Children","map","child","index","console","log","cloneElement","style","padding","key","Link","a","link","NavLink","_NavLink","navlink","ContentFactory","contentSchematic","template","content","lazy","Promise","all","resolve","setTimeout","then","fallback","Button","button","backgroundColor","hover","NavLinkGroup","useState","isOpen","setIsOpen","links","to","base","display","navlinkgroup","onClick","alignItems","icon","faAngleDown","faAngleRight","paddingLeft","name","Theme","configs","Layout","Sidebar","href","target","View","path","match","substring","params","company","work_experience","location","role","duration","highlights","highlight","component","title","project","date","tools","tool","url","_","default","brand","tagline","social","basename"],"mappings":"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","file":"static/js/4.a7be1c93.chunk.js","sourcesContent":["import React from 'react';\n\nimport {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\n\nconst Text = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.div`\n        font-family: ${theme.text[type].family};\n        font-size: ${theme.text[type].size};\n        color: ${theme.text[type].color};\n    `, props);\n}\n\nexport default Text;","import React from 'react';\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n\nconst DBQueryResult = (props: any) => {\n    const {data, loading, error} = useQuery(gql(props.query));\n    if (loading) return (<div>loading from db</div>);\n    if (data && props.render) return props.render({data, loading, error})\n    return (<code>{JSON.stringify(data)}</code>);\n}\nexport default DBQueryResult;","import React from 'react';\n\n// import {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\nconst Box = (props: any) => {\n    // const theme: any = useTheme();\n    return React.createElement(styled.div`\n        display: block;\n        padding: 20px;\n    `, {...props});\n}\nexport default Box;","import React from 'react';\n\n// import {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\nconst FlexBox = (props: any) => {\n    // const theme: any = useTheme();\n    return React.createElement(styled.div`\n        display: flex;\n        flex-direction: ${props.flexDirection};\n        padding: 20px;\n    `, {...props, children: \n        [React.Children.map(props.children, (child, index) => {\n            console.log(child);\n            return React.cloneElement(child, {style: {padding: '10px'}, key:index})\n        } )]\n    \n    });\n}\nexport default FlexBox;","import React from 'react';\n\nimport {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\nconst Link = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.a`\n        font-family: ${theme.link[type].family};\n        font-size: ${theme.link[type].size};\n        color: ${theme.link[type].color};\n    `, props);\n}\n\nexport default Link;","import React from 'react';\n\n\nimport {NavLink as _NavLink} from 'react-router-dom';\n\nimport {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\nconst NavLink = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled(_NavLink)`\n        font-family: ${theme.navlink[type].family};\n        font-size: ${theme.navlink[type].size};\n        color: ${theme.navlink[type].color};\n    `, props);\n}\n\nexport default NavLink;","import React, {Suspense} from 'react';\n\n\n\n\nconst ContentFactory = ({contentSchematic}: {contentSchematic: any}) => {\n\n  const {template, data} = contentSchematic;\n\n  const content = (() => {\n    switch (template) {\n      case \"about\":\n        return React.createElement(React.lazy(() => {\n          return Promise.all([\n            import(\"../content/About\"),\n            new Promise(resolve => setTimeout(resolve, 300))\n          ])\n          .then(([moduleExports]) => moduleExports);\n        }\n        ), {data});\n      default:\n        return <div>content template does not exist</div>;\n    }\n  })();\n\n  return (\n    <Suspense fallback={<div>Building Content</div>}>\n      {content}\n    </Suspense>\n  )\n}\nexport default ContentFactory;","import React from 'react';\n\nimport {useTheme} from '@emotion/react';\n\n\nimport styled from \"@emotion/styled\";\n\n\nconst Button = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    return React.createElement(styled.div`\n        font-family: ${theme.button[type].family};\n        font-size: ${theme.button[type].size};\n        background-color: ${theme.button[type].backgroundColor};\n        color: ${theme.button[type].color};\n        &:hover {\n            cursor: pointer;\n            background-color: ${theme.button[type].hover.backgroundColor};\n            color: ${theme.button[type].hover.color};\n        }\n    `, props);\n}\n\nexport default Button;","import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nimport {useTheme} from '@emotion/react';\n\nimport styled from \"@emotion/styled\";\n\n\nimport Button from '../basic/Button';\nimport Text from '../basic/Text';\nimport NavLink from './NavLink';\n\n\n\nconst NavLinkGroup = (props: any) => {\n    const type = props.type || 'default';\n    const theme: any = useTheme();\n    const [isOpen, setIsOpen] = useState(true);\n\n\n\n\n    const onClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    const links = React.Children.map(props.children, (child, index) => {\n        return React.cloneElement(child, {\n            ...child.props, \n            key:index, \n            to: props.base + child.props.to, \n            style: {display: isOpen ? 'block' : 'none'}\n        })\n    } );\n\n    return React.createElement(styled.div`\n        font-family: ${theme.navlinkgroup[type].family};\n        font-size: ${theme.navlinkgroup[type].size};\n        color: ${theme.navlinkgroup[type].color};\n        &:hover {\n            cursor: pointer;\n            color: ${theme.navlinkgroup[type].hover.color}\n        }\n    `, {...props, children: \n        <>\n            <Button onClick={onClick} style={{\n                display: 'flex',\n                alignItems: 'center',\n                flexDirection: 'row',\n            }}>\n                <FontAwesomeIcon icon={isOpen ? faAngleDown : faAngleRight}/>\n                <Text style={{paddingLeft: '10px'}}>{props.name}</Text>\n            </Button>\n            {links}\n        </>\n    });\n}\n\nexport default NavLinkGroup;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport * as _ from 'lodash';\nimport {ThemeProvider} from '@emotion/react';\n\n\nimport DBQueryResult from '../components/DBQueryResult';\n\nimport styled from \"@emotion/styled\";\n\nimport Box from '../components/layout/Box';\nimport FlexBox from '../components/layout/FlexBox';\nimport Text from '../components/basic/Text';\nimport Link from '../components/basic/Link';\nimport NavLink from '../components/navigation/NavLink';\nimport NavLinkGroup from '../components/navigation/NavLinkGroup';\n\nimport ContentFactory from '../factories/ContentFactory';\n\n\n\nconst Theme = ({configs}: {configs: any}) => {\n    const defaultConfigs = {\n        text: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"12px\",\n                color: 'black'\n            },\n            brand: {\n                family: \"'Fira Mono', monospace\",\n                size: \"24px\",\n                color: 'blue'\n            },\n            tagline: {\n                family: \"'Fira Mono', monospace\",\n                size: \"16px\",\n                color: 'purple'\n            }\n        },\n        link: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"10px\",\n                color: 'purple'\n            },\n            social: {\n                family: \"'Fira Mono', monospace\",\n                size: \"10px\",\n                color: 'purple'\n            }\n        },\n        navlink: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"16px\",\n                color: 'red'\n            }\n        },\n        navlinkgroup: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"18px\",\n                color: 'pink',\n                hover: {\n                    color: 'purple'\n                }\n            }\n        },\n        button: {\n            default: {\n                family: \"'Fira Mono', monospace\",\n                size: \"16px\",\n                color: 'red',\n                backgroundColor: 'yellow',\n                hover: {\n                    color: 'blue',\n                    backgroundColor: 'orange',\n                }\n            }\n        }\n    };\n\n    /**\n     * Could add a function here to validate theme schema.\n     * if (!valid) return <div>theme type</div>\n     */\n\n\n    const Layout = (props: any) => {\n        return React.createElement(styled.div`\n            height: 100vh;\n            display: grid;\n            grid-template-rows: 2fr 1fr 7fr;\n            grid-template-columns: 1fr 4fr;\n        `, props);\n    };\n\n    Layout.Sidebar = (props: any) => {\n        return React.createElement(styled.div`\n            grid-row: 1 / 4;\n            grid-column: 1 / 2;\n        `, {...props, children: \n            <>\n                <FlexBox flexDirection=\"column\">\n                    <Text type=\"brand\">Jonathan Crawford</Text>\n                    <Text type=\"tagline\">Software Engineer</Text>\n                </FlexBox>\n                <FlexBox flexDirection=\"row\">\n                    <Link type=\"social\" href='https://www.linkedin.com/in/jonathantcrawford/' target=\"_blank\">LinkedIn</Link>\n                    <Link type=\"social\" href='https://github.com/jonathantcrawford' target='_blank'>GitHub</Link>\n                </FlexBox>\n                <FlexBox flexDirection=\"column\">\n                    <NavLink to='/about'>About</NavLink>\n                    <NavLinkGroup name='Work Experience' base='/work-experience'>\n                        <NavLink to='/bryx'>Bryx</NavLink>\n                        <NavLink to='/catertrax'>CaterTrax</NavLink>\n                    </NavLinkGroup>\n                    <NavLinkGroup name='Projects' base='/projects'>\n                        <NavLink to='/resume'>Resume</NavLink>\n                        <NavLink to='/todo-app'>Todo App</NavLink>\n                        <NavLink to='/nfl-pickem'>NFL Pickem</NavLink>\n                        <NavLink to='/simplescope'>VST Plugin: SimpleScope</NavLink>\n                        <NavLink to='/3d-audio-demo'>3D Audio Demo</NavLink>\n                    </NavLinkGroup>\n                </FlexBox>\n            </>\n        });\n    }\n\n    Layout.View = (props: any) => {\n        return React.createElement(styled.div`\n            grid-row: 1 / 4;\n            grid-column: 2 / 3;\n        `, {...props, children: \n            <Switch>\n                <Route path=\"/about\"\n                        render={(props: any) => (\n                            <DBQueryResult \n                                {...props} \n                                query={`\n                                    query {\n                                        content(query: { AND: [{ template: \"${props.match.path.substring(1)}\" }] }) {\n                                            template\n                                            data {\n                                                headshot_url\n                                            }\n                                        }\n                                    }\n                                `}\n                                render={({data}: any) => <ContentFactory contentSchematic={data.content}/> }\n                                />\n                        )}\n                    />\n                <Route path=\"/work-experience/:company\"\n                        render={(props: any) => (\n                            <DBQueryResult \n                                {...props} \n                                query={`\n                                    query {\n                                        work_experience(query: { AND: [{ slug: \"${props.match.params.company}\" }] }) {\n                                        company\n                                        role\n                                        location\n                                        duration\n                                        highlights\n                                        }\n                                    }\n                                `}\n                                render={({data}: any) => (\n                                    <Box>\n                                        <Text>{data.work_experience.company}</Text>\n                                        <Text>{data.work_experience.location}</Text>\n                                        <Text>{data.work_experience.role}</Text>\n                                        <Text>{data.work_experience.duration}</Text>\n                                        {data.work_experience.highlights.map((highlight: any, index: any) => <Text key={index}>{highlight}</Text>)}\n                                    </Box>\n                                )}\n                                />\n                        )}\n                    />\n                <Route path=\"/projects/:title\" \n                        component={(props: any) => (\n                            <DBQueryResult \n                                {...props} \n                                query={`\n                                    query {\n                                        project(query: { AND: [{ slug: \"${props.match.params.title}\" }] }) {\n                                            title\n                                            links {\n                                                title\n                                                url\n                                            }\n                                            highlights\n                                            date\n                                            tools\n                                        }\n                                    }\n                                `}\n                                render={({data}: any) => (\n                                    <Box>\n                                        <Text>{data.project.title}</Text>\n                                        <Text>{data.project.date}</Text>\n                                        {data.project.highlights.map((highlight: any, index: any) => <Text key={index}>{highlight}</Text>)}\n                                        {data.project.tools.map((tool: any, index: any) => <Text key={index}>{tool}</Text>)}\n                                        {data.project.links.map((link: any, index: any) => <Link key={index} href={link.url} target=\"_blank\">{link.title}</Link>)}\n                                    </Box>\n                                )}\n                                />\n                        )}\n                    />\n                <Route path=\"*\"> \n                    <Redirect to=\"/about\" />\n                </Route>\n            </Switch>\n        });\n    }\n\n    return (\n        <ThemeProvider theme={_.defaultsDeep(configs,defaultConfigs)}>\n            <Router basename=\"/\">\n                <Layout>\n                    <Layout.Sidebar/>\n                    <Layout.View/>\n                </Layout>\n            </Router>\n        </ThemeProvider>\n    );\n}\n\n\nexport default Theme;\n\n"],"sourceRoot":""}