{"version":3,"sources":["components/DBQueryResult.tsx","themes/Traditional/Layout.tsx","themes/Traditional/index.tsx"],"names":["DBQueryResult","props","useQuery","gql","query","data","loading","error","JSON","stringify","Layout","theme","useTheme","layout","React","createElement","styled","div","fonts","primary","colors","children","Header","Navigation","Link","to","LinkGroup","name","Social","href","target","View","path","component","match","substring","params","company","title","hashType","basename","a","NavLink","useState","isOpen","setIsOpen","links","Children","map","child","index","key","onClick","Theme","configs","_"],"mappings":"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","file":"static/js/5.e5f01e62.chunk.js","sourcesContent":["import React from 'react';\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n\nconst DBQueryResult = (props: any) => {\n    const {data, loading, error} = useQuery(gql(props.query))\n    return (<code>{JSON.stringify(data)}</code>);\n}\nexport default DBQueryResult;","import React, {useState} from 'react';\nimport {HashRouter as Router, Switch, Route, Redirect, NavLink} from 'react-router-dom';\n\n\nimport DBQueryResult from '../../components/DBQueryResult';\n\nimport styled from \"@emotion/styled\";\nimport {useTheme} from '@emotion/react';\n\n\nconst Layout = (props: any) => {\n    const theme: any = useTheme();\n    const layout = React.createElement(styled.div`\n        font-family: ${theme.fonts.primary};\n        color: ${theme.colors.primary};\n        height: 100vh;\n        display: grid;\n        grid-template-rows: 1fr 5fr;\n        grid-template-columns: 1fr;\n    `, {\n        children: [\n            <Layout.Header key=\"header\">\n                <div>Jonathan Crawford</div>\n                <div>Software Engineer</div>\n                <Layout.Navigation>\n                    <Navigation.Link to='/about'>About</Navigation.Link>\n                    <Navigation.LinkGroup name='Work Experience'>\n                        <Navigation.Link to='/work-experience/bryx'>Bryx</Navigation.Link>\n                        <Navigation.Link to='/work-experience/catertrax'>CaterTrax</Navigation.Link>\n                    </Navigation.LinkGroup>\n                    <Navigation.LinkGroup name='Projects'>\n                        <Navigation.Link to='/projects/resume'>Resume</Navigation.Link>\n                        <Navigation.Link to='/projects/todo-app'>Todo App</Navigation.Link>\n                        <Navigation.Link to='/projects/nfl-pickem'>NFL Pickem</Navigation.Link>\n                        <Navigation.Link to='/projects/simplescope'>VST Plugin: SimpleScope</Navigation.Link>\n                        <Navigation.Link to='/projects/3d-audio-demo'>3D Audio Demo</Navigation.Link>\n                    </Navigation.LinkGroup>\n                </Layout.Navigation>\n                <Layout.Social>\n                    <Social.Link href='https://www.linkedin.com/in/jonathantcrawford/' target=\"_blank\">LinkedIn</Social.Link>\n                    <Social.Link href='https://github.com/jonathantcrawford' target='_blank'>GitHub</Social.Link>\n                </Layout.Social>\n            </Layout.Header>,\n            <Layout.View key=\"view\">\n                <Switch>\n                <Route path=\"/about\"\n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            content(query: { AND: [{ slug: \"${props.match.path.substring(1)}\" }] }) {\n                                                theme\n                                                template\n                                                data {\n                                                    headshot_url\n                                                }\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                    <Route path=\"/work-experience/:company\"\n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            work_experiences(query: { AND: [{ slug: \"${props.match.params.company}\" }] }) {\n                                            company\n                                            role\n                                            location\n                                            duration\n                                            highlights\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                <Route path=\"/projects/:title\" \n                            component={(props: any) => (\n                                <DBQueryResult \n                                    {...props} \n                                    query={`\n                                        query {\n                                            projects(query: { AND: [{ slug: \"${props.match.params.title}\" }] }) {\n                                                title\n                                                links {\n                                                    title\n                                                    url\n                                                }\n                                                highlights\n                                                date\n                                                tools\n                                            }\n                                        }\n                                    `}/>\n                            )}\n                        />\n                    <Route path=\"*\"> \n                        <Redirect to=\"/about\" />\n                    </Route>\n                </Switch>\n            </Layout.View>,\n    ]});\n\n    return (\n        <Router hashType=\"slash\" basename=\"/\">\n            {layout}\n        </Router>\n    );\n}\n\n\nLayout.Header = (props: any) => {\n    return React.createElement(styled.div`\n        grid-row: 1 / 2;\n        grid-column: 1 / 2;\n\n        background-color: blue;\n    `, props);\n}\n\nconst Social = (props: any) => {\n    return React.createElement(styled.div`\n        display: block;\n    `, props);\n}\n\nSocial.Link = (props: any) => {\n    return React.createElement(styled.a`\n        color: purple;\n    `, props);\n}\n\nLayout.Social = Social;\n\n\n\nconst Navigation = (props: any) => {\n    return React.createElement(styled.div`\n        display: flex;\n        flex-direction: row;\n    `, props);\n}\n\nNavigation.Link = (props: any) => {\n    return React.createElement(styled(NavLink)`\n        color: purple;\n    `, props);\n}\n\n\nconst LinkGroup = (props: any) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const onClick = () => {\n        setIsOpen(!isOpen);\n    }\n\n    const links = React.Children.map(props.children, (child, index) => \n        React.createElement(styled(Navigation.Link)`\n            display: ${isOpen ? 'block' : 'none'};\n            color: green;\n        `, {...child.props, key:index}));\n\n    return React.createElement(styled.div`\n        color: pink;\n    `, {...props, children: [<div key=\"name\" onClick={onClick}>{props.name}</div>, links]});\n}\n\nNavigation.LinkGroup = LinkGroup;\nLayout.Navigation = Navigation;\n\nLayout.View = (props: any) => {\n    return React.createElement(styled.div`\n        grid-row: 2 / 3;\n        grid-column: 1 / 2;\n        background-color: grey;\n    `, props);\n}\n\n\nexport default Layout;","import React from 'react';\n\nimport * as _ from 'lodash';\nimport {ThemeProvider} from '@emotion/react';\n\n\nimport Layout from './Layout';\n\n\n\nconst Theme = ({configs}: {configs: any}) => {\n    const defaultConfigs = {\n        fonts: {\n            primary: \"'Poppins', sans-serif\"\n        },\n        colors: {\n            primary: 'red'\n        }\n    };\n\n    /**\n     * Could add a function here to validate theme schema.\n     * if (!valid) return <div>theme setup incorrectly</div>\n     */\n    return (\n        <ThemeProvider theme={_.defaultsDeep(configs,defaultConfigs)}>\n            <Layout/>\n        </ThemeProvider>\n    );\n}\n\n\nexport default Theme;\n\n\n"],"sourceRoot":""}